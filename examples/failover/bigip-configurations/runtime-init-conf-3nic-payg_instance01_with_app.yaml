extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: 1.26.0
      extensionHash: f1f4a23cd7d3ac3d9f38fed520c373f5a16284fab001ebd26593ddc97c011ef3
    - extensionType: as3
      extensionVersion: 3.33.0
      extensionHash: 368d7b22738fe707655ca3a104c7c79c5c185eb07021e41eebe0e19d70ca63ee
    - extensionType: cf
      extensionVersion: 1.9.0
      extensionHash: da3118eacc4fe9ff925d95d4bf8d1993810560e07260825306cb0721862defdf
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value:
        schemaVersion: 1.0.0
        class: Device
        async: true
        label: Standalone 2NIC BIG-IP declaration for Declarative Onboarding with
          PAYG license
        Common:
          class: Tenant
          myNtp:
            class: NTP
            servers:
              - 0.pool.ntp.org
              - 1.pool.ntp.org
            timezone: UTC
          myDns:
            class: DNS
            nameServers:
              - 169.254.169.253
            search:
              - f5.com
          mySystem:
            autoPhonehome: true
            class: System
            hostname: 'failover0.local'
          admin:
            class: User
            userType: regular
            password: '{{{BIGIP_PASSWORD}}}'
            shell: bash
          external:
            class: VLAN
            tag: 4094
            mtu: 1500
            interfaces:
              - name: '1.1'
                tagged: false
          externalSelf:
            class: SelfIp
            address: '{{{SELF_IP_EXTERNAL}}}'
            vlan: external
            allowService: 'default'
            trafficGroup: traffic-group-local-only
          internal:
            class: VLAN
            interfaces:
              - name: '1.2'
                tagged: false
            mtu: 1500
            tag: 4093
          internal-self:
            class: SelfIp
            address: '{{{SELF_IP_INTERNAL}}}'
            allowService: default
            trafficGroup: traffic-group-local-only
            vlan: internal
          default:
            class: Route
            gw: '{{{DEFAULT_ROUTE}}}'
            network: default
            mtu: 1500
            localOnly: true
          configSync:
            class: ConfigSync
            configsyncIp: /Common/externalSelf/address
          failoverAddress:
            class: FailoverUnicast
            address: /Common/externalSelf/address
          failoverGroup:
            class: DeviceGroup
            type: sync-failover
            members:
              - failover0.local
              - failover1.local
            owner: /Common/failoverGroup/members/0
            autoSync: true
            saveOnAutoSync: false
            networkFailover: true
            fullLoadOnSync: false
            asmSync: false
          trust:
            class: DeviceTrust
            localUsername: admin
            localPassword: '{{{BIGIP_PASSWORD}}}'
            remoteHost: /Common/failoverGroup/members/0
            remoteUsername: admin
            remotePassword: '{{{BIGIP_PASSWORD}}}'
          dbVars:
            class: DbVariables
            config.allow.rfc3927: enable
            tm.tcpudptxchecksum: Software-only
    - extensionType: cf
      type: inline
      value:
        schemaVersion: 1.0.0
        class: Cloud_Failover
        environment: aws
        controls:
          class: Controls
          logLevel: info
        externalStorage:
          scopingTags:
            f5_cloud_failover_label: bigip-high-availability-solution
        failoverAddresses:
          enabled: true
          scopingTags:
            f5_cloud_failover_label: bigip-high-availability-solution
          requireScopingTags: false
    - extensionType: as3
      type: inline
      value:
        class: ADC
        schemaVersion: 3.0.0
        label: Failover
        remark: Failover
        Tenant_1:
          class: Tenant
          Shared:
            class: Application
            template: shared
            shared_pool:
              class: Pool
              remark: Service 1 shared pool
              members:
                - servicePort: 80
                  addressDiscovery: aws
                  region: '{{{REGION}}}'
                  updateInterval: 60
                  tagKey: 'aws:cloudformation:logical-id'
                  tagValue: AppInstance
                  addressRealm: private
              monitors:
                - http
            serviceAddress01:
              class: Service_Address
              virtualAddress: 10.0.0.101
              trafficGroup: none
            serviceAddress02:
              class: Service_Address
              virtualAddress: 10.0.3.101
              trafficGroup: none
          HTTP_Service_01:
            class: Application
            template: http
            serviceMain:
              class: Service_HTTP
              virtualAddresses:
                - use: /Tenant_1/Shared/serviceAddress02
              snat: auto
              pool: /Tenant_1/Shared/shared_pool
          HTTP_Service_02:
            class: Application
            template: http
            serviceMain:
              class: Service_HTTP
              virtualAddresses:
                - use: /Tenant_1/Shared/serviceAddress01
              snat: auto
              pool: /Tenant_1/Shared/shared_pool
          HTTPS_Service_01:
            class: Application
            template: https
            serviceMain:
              class: Service_HTTPS
              virtualAddresses:
                - use: /Tenant_1/Shared/serviceAddress02
              snat: auto
              pool: /Tenant_1/Shared/shared_pool
              serverTLS:
                bigip: /Common/clientssl
              redirect80: false
          HTTPS_Service_02:
            class: Application
            template: https
            serviceMain:
              class: Service_HTTPS
              virtualAddresses:
                - use: /Tenant_1/Shared/serviceAddress01
              snat: auto
              pool: /Tenant_1/Shared/shared_pool
              serverTLS:
                bigip: /Common/clientssl
              redirect80: false
post_onboard_enabled: []
pre_onboard_enabled:
  - name: disable_1nic_config
    type: inline
    commands:
      - /usr/bin/setdb provision.1nicautoconfig disable
runtime_parameters:
  - name: BIGIP_PASSWORD
    type: secret
    secretProvider:
      environment: aws
      secretId: mySecretId
      type: SecretsManager
      version: AWSCURRENT
  - name: HOST_NAME
    type: metadata
    metadataProvider:
      environment: aws
      type: compute
      field: hostname
  - name: SELF_IP_EXTERNAL
    type: metadata
    metadataProvider:
      environment: aws
      type: network
      field: local-ipv4s
      index: 1
  - name: SELF_IP_INTERNAL
    type: metadata
    metadataProvider:
      type: network
      environment: aws
      field: local-ipv4s
      index: 2
  - name: DEFAULT_ROUTE
    type: metadata
    metadataProvider:
      environment: aws
      type: network
      field: subnet-ipv4-cidr-block
      index: 1
  - name: AWS_SESSION_TOKEN
    type: url
    value: http://169.254.169.254/latest/api/token
    headers:
      - name: Content-Type
        value: json
      - name: User-Agent
        value: f5-bigip-runtime-init
      - name: method
        value: PUT
      - name: X-aws-ec2-metadata-token-ttl-seconds
        value: 21600
  - name: REGION
    type: url
    query: region
    value: 'http://169.254.169.254/latest/dynamic/instance-identity/document'
    headers:
      - name: Content-Type
        value: json
      - name: User-Agent
        value: f5-bigip-runtime-init
      - name: X-aws-ec2-metadata-token
        value: "{{{AWS_SESSION_TOKEN}}}"
