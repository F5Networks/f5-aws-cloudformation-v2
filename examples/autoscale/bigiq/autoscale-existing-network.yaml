AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates BIG-IQ-based BIG-IP Autoscale WAF solution. The template uses
  nested templates for provisioning access, compute resources for hosting BIG-IP Autoscale
  solution.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Templates Location
        Parameters:
          - s3BucketName
          - s3BucketRegion
          - artifactLocation
      - Label:
          default: Network Configuration
        Parameters:
          - vpcCidr
          - vpcId
          - bigIpSubnetAz1
          - bigIpSubnetAz2
          - externalSubnetAz1
          - externalSubnetAz2
          - internalSubnetAz1
          - internalSubnetAz2
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - sshKey
          - bigIpInstanceProfile
      - Label:
          default: DAG / Ingress
        Parameters:
          - provisionExternalBigipLoadBalancer
          - provisionInternalBigipLoadBalancer
          - provisionPublicIp
          - restrictedSrcAddressMgmt
          - restrictedSrcAddressApp
      - Label:
          default: BIG-IP and Auto Scaling Configuration
        Parameters:
          - bigIpRuntimeInitPackageUrl
          - bigIpRuntimeInitConfig
          - bigIpScalingMinSize
          - bigIpScalingMaxSize
          - bigIpScaleInCpuThreshold
          - bigIpScaleInThroughputThreshold
          - bigIpScaleOutCpuThreshold
          - bigIpScaleOutThroughputThreshold
          - bigIpMaxBatchSize
          - bigIpMinInstancesInService
          - bigIpPauseTime
          - bigIpImage
          - bigIpCustomImageId
          - bigIpInstanceType
          - bigIpSecretArn
          - metricNameSpace
          - notificationEmail
          - snsEvents
          - allowUsageAnalytics
      - Label:
          default: BIG-IQ configuration
        Parameters:
          - bigIqAddressType
          - bigIqSecretArn
          - bigIqSubnetId
          - bigIqSecurityGroupId
      - Label:
          default: Revoke Function
        Parameters:
          - lambdaS3BucketName
          - lambdaS3Key
      - Label:
          default: Telemetry Configuration
        Parameters:
          - createLogDestination
          - cloudWatchLogGroupName
          - cloudWatchLogStreamName
          - cloudWatchDashboardName
          - loggingS3BucketName
      - Label:
          default: Resources Tags
        Parameters:
          - uniqueString
          - application
          - cost
          - environment
          - group
          - owner
    ParameterLabels:
      allowUsageAnalytics:
        default: Send anonymous statistics to F5
      application:
        default: Application
      artifactLocation:
        default: Path to directory where the modules folder is located. ex. "examples/"
      bigIpSubnetAz1:
        default: Subnet id for BIGIP Availability Zone 1 interface
      bigIpSubnetAz2:
        default: Subnet id for BIGIP Availability Zone 2 interface
      externalSubnetAz1:
        default: Subnet id for external Availability Zone 1 interface
      externalSubnetAz2:
        default: Subnet id for external Availability Zone 2 interface
      internalSubnetAz1:
        default: Subnet id for internal Availability Zone 1 interface
      internalSubnetAz2:
        default: Subnet id for internal Availability Zone 2 interface
      bigIpCustomImageId:
        default: Custom Image Id
      bigIpImage:
        default: F5 BIG-IP Image
      bigIpInstanceProfile:
        default: Instance profile
      bigIpInstanceType:
        default: Enter valid instance type.
      bigIpMaxBatchSize:
        default: Maximum number of instances CloudFormation updates
      bigIpMinInstancesInService:
        default: Minimum number of instances that must be in service to update
      bigIpPauseTime:
        default: Amount of time CloudFormation waits between updating batches
      bigIpRuntimeInitConfig:
        default: BIG-IP Runtime Init config
      bigIpRuntimeInitPackageUrl:
        default: Runtime Init Package
      bigIpScaleInCpuThreshold:
        default: Low CPU Percentage threshold to begin scaling in BIG-IP VE instances.
      bigIpScaleInThroughputThreshold:
        default: Incoming throughput threshold to begin scaling in BIG-IP VE instances.
      bigIpScaleOutCpuThreshold:
        default: High CPU Percentage threshold to begin scaling out BIG-IP VE instances.
      bigIpScaleOutThroughputThreshold:
        default: Incoming throughput threshold to begin scaling out BIG-IP VE instances.
      bigIpScalingMaxSize:
        default: Maximum number of BIG-IP instances that can be created in the Autoscale
          Group
      bigIpScalingMinSize:
        default: Minimum number of BIG-IP instances that can be created in the Autoscale
          Group
      bigIpSecretArn:
        default: ARN of Secrets Manager secret
      bigIqAddressType:
        default: 'The type (public or private) of IP address or hostname for the BIG-IQ
          to be used when licensing the BIG-IP. When using a private IP address or
          hostname, you must provide values for the bigIqSecurityGroupId and bigIqSubnetId
          parameters.'
      bigIqSecretArn:
        default: The ARN of the BIG-IQ secret to use during BIG-IP licensing via BIG-IQ.
      bigIqSecurityGroupId:
        default: The ID of the security group where BIG-IQ is deployed. You must provide
          a value for this parameter when using a private BIG-IP address.
      bigIqSubnetId:
        default: The ID of the subnet where BIG-IQ is deployed. You must provide a
          value for this parameter when using a private BIG-IP address.
      cloudWatchLogGroupName:
        default: CloudWatch Log Group Name
      cloudWatchLogStreamName:
        default: CloudWatch Log Stream Name
      cloudWatchDashboardName:
        default: CloudWatch Dashboard Name
      cost:
        default: Cost Center
      createLogDestination:
        default: Create Log Destination
      environment:
        default: Environment
      group:
        default: Group
      lambdaS3BucketName:
        default: S3 bucket with BIG-IQ Revoke function
      lambdaS3Key:
        default: The top-level key in the lambda S3 bucket where the lambda function
          is located
      loggingS3BucketName:
        default: S3 Bucket for BIG-IP logging.
      metricNameSpace:
        default: CloudWatch custom metric name space
      notificationEmail:
        default: Notification Email
      owner:
        default: Owner
      provisionExternalBigipLoadBalancer:
        default: Provision External Elastic Load Balancer
      provisionInternalBigipLoadBalancer:
        default: Provision Internal Elastic Load Balancer
      provisionPublicIp:
        default: Provision Public IP addresses for the BIG-IP interfaces
      restrictedSrcAddressApp:
        default: Restricted Source Address to Application
      restrictedSrcAddressMgmt:
        default: Restricted Source Address to BIG-IP
      s3BucketName:
        default: S3 Bucket where Templates are Located
      s3BucketRegion:
        default: S3 Bucket Region where Templates are Located
      snsEvents:
        default: Provides list of SNS Events used for sending Notifications on Autoscale
          group
      sshKey:
        default: Supply the public key that will be used for SSH authentication to
          the BIG-IP and application virtual machines
      uniqueString:
        default: Unique string
      vpcCidr:
        default: VPC CIDR
      vpcId:
        default: VPC ID
  Version: 2.5.0.0
Outputs:
  wafExternalDnsName:
    Condition: externalLB
    Value: !GetAtt
      - Dag
      - Outputs.externalElasticLoadBalancerDnsName
  wafInternalDnsName:
    Condition: internalLB
    Value: !GetAtt
      - Dag
      - Outputs.internalElasticLoadBalancerDnsName
  wafInternalHttpsUrl:
    Condition: internalLB
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - Dag
          - Outputs.internalElasticLoadBalancerDnsName
  wafExternalHttpsUrl:
    Condition: externalLB
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - Dag
          - Outputs.externalElasticLoadBalancerDnsName
  amiId:
    Condition: noCustomImageId
    Description: Ami lookup returned ami id.
    Value: !GetAtt
      - AmiInfo
      - Id
  bigIpAutoscaleGroupName:
    Value: !GetAtt
      - BigipAutoscale
      - Outputs.bigIpAutoscaleGroup
Parameters:
  allowUsageAnalytics:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: This deployment can send anonymous statistics to F5 to help us determine
      how to improve our solutions. If you select **false** statistics are not sent.
    Type: String
  application:
    Default: f5app
    Description: Application Tag.
    Type: String
  artifactLocation:
    AllowedPattern: ^.*[0-9a-zA-Z]+/$
    ConstraintDescription: key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: f5-aws-cloudformation-v2/v2.5.0.0/examples/
    Description: The path in the S3Bucket where the modules folder is located. Can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/).
    Type: String
  bigIpSubnetAz1:
    ConstraintDescription: Must be a valid subnet id
    Description: Availability Zone 1 BIG-IP Subnet ID.
    Type: AWS::EC2::Subnet::Id
  bigIpSubnetAz2:
    ConstraintDescription: Must be a valid subnet id
    Description: Availability Zone 2 BIG-IP Subnet ID.
    Type: AWS::EC2::Subnet::Id
  externalSubnetAz1:
    ConstraintDescription: Must be a valid subnet id
    Default: ''
    Description: Availability Zone 1 External Subnet ID. Required if you are provisioning
      an external load balancer.
    Type: AWS::EC2::Subnet::Id
  externalSubnetAz2:
    ConstraintDescription: Must be a valid subnet id
    Default: ''
    Description: Availability Zone 2 External Subnet ID. Required if you are provisioning
      an external load balancer.
    Type: AWS::EC2::Subnet::Id
  internalSubnetAz1:
    ConstraintDescription: Must be a valid subnet id
    Default: ''
    Description: Availability Zone 1 Internal Subnet ID. Required if you are provisioning
      an internal load balancer.
    Type: AWS::EC2::Subnet::Id
  internalSubnetAz2:
    ConstraintDescription: Must be a valid subnet id
    Default: ''
    Description: Availability Zone 2 Internal Subnet ID. Required if you are provisioning
      an internal load balancer.
    Type: AWS::EC2::Subnet::Id
  bigIpCustomImageId:
    Default: ''
    Description: Provide BIG-IP AMI ID you wish to deploy.
    MaxLength: 255
    Type: String
  bigIpImage:
    ConstraintDescription: Must be a valid F5 BIG-IP market place image
    Default: '*16.1.3.1-0.0.11**BYOL-All Modules 2Boot*'
    Description: F5 BIG-IP market place image
    Type: String
  bigIpInstanceProfile:
    Default: ''
    Description: Enter the name of an existing IAM instance profile with applied IAM
      policy to be associated to the BIG-IP virtual machine(s). Leave default to create
      a new instance profile.
    Type: String
  bigIpInstanceType:
    AllowedValues:
      - t3.large
      - m3.2xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - cc2.8xlarge
      - c5n.2xlarge
      - c5n.4xlarge
    ConstraintDescription: Must be a valid EC2 instance type for BIG-IP
    Default: m5.xlarge
    Description: Enter valid instance type.
    Type: String
  bigIpMaxBatchSize:
    Default: 5
    Description: Specifies the maximum number of instances that CloudFormation updates.
    Type: Number
  bigIpMinInstancesInService:
    ConstraintDescription: This value must be less than the scalingMaxSize of the
      Auto Scaling group.
    Default: 1
    Description: Specifies the minimum number of instances that must be in service
      within the Auto Scaling group while CloudFormation updates old instances.
    Type: Number
  bigIpPauseTime:
    ConstraintDescription: Select a value between 0 to 3600
    Default: 480
    Description: The amount of time in seconds that CloudFormation pauses after making
      a change to a batch of instances to give those instances time to start software
      applications.
    MaxValue: 3600
    MinValue: 0
    Type: Number
  bigIpRuntimeInitConfig:
    Default: 'https://f5-cft-v2.s3.amazonaws.com/f5-aws-cloudformation-v2/v2.5.0.0/examples/autoscale/bigip-configurations/runtime-init-conf-bigiq-with-app.yaml'
    Description: 'REQUIRED - Supply a URL to the bigip-runtime-init configuration
      file in YAML or JSON format to use for f5-bigip-runtime-init configuration.'
    Type: String
  bigIpRuntimeInitPackageUrl:
    Default: 'https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.5.1/dist/f5-bigip-runtime-init-1.5.1-1.gz.run'
    Description: URL for BIG-IP Runtime Init package.
    Type: String
  bigIpScaleInCpuThreshold:
    ConstraintDescription: Select a value between 0 to 100
    Default: 20
    Description: Low CPU Percentage threshold to begin scaling in BIG-IP VE instances.
    MaxValue: 100
    MinValue: 0
    Type: Number
  bigIpScaleInThroughputThreshold:
    Default: 10000000
    Description: 'The amount of throughput (**bytes**) that should trigger a scale
      in event. Note: The default value is equal to 10 MB.'
    Type: Number
  bigIpScaleOutCpuThreshold:
    ConstraintDescription: Select a value between 0 to 100
    Default: 80
    Description: High CPU Percentage threshold to begin scaling out BIG-IP VE instances.
    MaxValue: 100
    MinValue: 0
    Type: Number
  bigIpScaleOutThroughputThreshold:
    Default: 20000000
    Description: 'The amount of throughput (**bytes**) that should trigger a scale
      out event. Note: The default value is equal to 20 MB.'
    Type: Number
  bigIpScalingMaxSize:
    ConstraintDescription: Must be a number between 2-100
    Default: 50
    Description: Maximum number of BIG-IP instances (2-100) that can be created in
      the Auto Scale Group.
    MaxValue: 100
    MinValue: 2
    Type: Number
  bigIpScalingMinSize:
    ConstraintDescription: Must be a number between 1-99
    Default: 1
    Description: Minimum number of BIG-IP instances (1-99) you want available in the
      Auto Scale Group.
    MaxValue: 99
    MinValue: 1
    Type: Number
  bigIpSecretArn:
    Default: ''
    Description: The ARN of a Secrets Manager secret to create READ permissions for.
      For example, if customizing your runtime-init config with an admin password,
      logging credential, etc.
    Type: String
  bigIqSecretArn:
    Description: The ARN of the AWS secret containing the password for BIG-IQ used
      during BIG-IP licensing via BIG-IQ.
    Type: String
  bigIqAddressType:
    AllowedValues:
      - private
      - public
    ConstraintDescription: Must be either private or public
    Default: private
    Description: 'The type (public or private) of IP address or hostname for the BIG-IQ
      to be used when licensing the BIG-IP.  Note: When using a private IP address
      or hostname, you must provide values for the bigIqSecurityGroupId and bigIqSubnetId
      parameters.'
    Type: String
  bigIqSecurityGroupId:
    Default: ''
    Description: The ID of the security group where BIG-IQ is deployed. You must provide
      a value for this parameter when using a private BIG-IP address.
    Type: String
  bigIqSubnetId:
    Default: ''
    Description: The ID of the subnet where BIG-IQ is deployed. You must provide a
      value for this parameter when using a private BIG-IP address.
    Type: String
  cloudWatchLogGroupName:
    Default: ''
    Description: The name of the CloudWatch Log Group
    Type: String
  cloudWatchLogStreamName:
    Default: ''
    Description: The name of the CloudWatch Log Stream
    Type: String
  cloudWatchDashboardName:
    Default: ''
    AllowedPattern: '[0-9A-Za-z_-]*'
    Description: The name of the CloudWatch Dashboard
    Type: String
  cost:
    Default: f5cost
    Description: Cost Center Tag.
    Type: String
  createLogDestination:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Select true to create a new CloudWatch logging destination.
    Type: String
  environment:
    Default: f5env
    Description: Environment Tag.
    Type: String
  group:
    Default: f5group
    Description: Group Tag.
    Type: String
  lambdaS3BucketName:
    Default: f5-aws-bigiq-revoke
    Description: REQUIRED - The name of the S3 bucket where the lambdaBigiqRevoke
      lambda function is located.
    Type: String
  lambdaS3Key:
    Default: main/
    Description: REQUIRED - The top-level key in the lambda S3 bucket where the lambda
      function is located.
    Type: String
  loggingS3BucketName:
    Default: ''
    Description: The name of the S3 bucket where BIG-IP logs will be sent. If creating
      a new log destination, the bucket will be created.
    Type: String
  metricNameSpace:
    Default: f5-scaling-metrics
    Description: CloudWatch namespace used for custom metrics. This should match the
      namespace defined in your telemetry services declaration within bigipRuntimInitConfig.
    Type: String
  notificationEmail:
    AllowedPattern: .+@.+
    ConstraintDescription: Must be a valid email address.
    Description: REQUIRED - Valid email address to send Auto Scaling event notifications.
    Type: String
  owner:
    Default: f5owner
    Description: Owner Tag.
    Type: String
  provisionExternalBigipLoadBalancer:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Select true if you would like to provision an external elastic load
      balancer.
    Type: String
  provisionInternalBigipLoadBalancer:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Select true if you would like to provision an internal elastic load
      balancer.
    Type: String
  provisionPublicIp:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Whether or not to provision Public IP Addresses for the BIG-IP Network
      Interfaces.
    Type: String
  restrictedSrcAddressMgmt:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: REQUIRED - The IP address range used to SSH and access management
      GUI on the EC2 instances.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  restrictedSrcAddressApp:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: REQUIRED - The IP address range that can be used to access web traffic
      (80/443) to the EC2 instances.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  s3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: >-
      S3 bucket name can include numbers, lowercase letters, uppercase letters, and
      hyphens (-). It cannot start or end with a hyphen (-).
    Default: f5-cft-v2
    Description: >-
      REQUIRED - S3 bucket name for the modules. S3 bucket name can include numbers,
      lowercase letters, uppercase letters, and hyphens (-). It cannot start or end
      with a hyphen (-).
    Type: String
  s3BucketRegion:
    Default: us-east-1
    Description: The AWS Region where the Quick Start S3 bucket (s3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  snsEvents:
    Description: Provides list of SNS Topics used on Autoscale Group.
    Type: List<String>
    Default: autoscaling:EC2_INSTANCE_LAUNCH,autoscaling:EC2_INSTANCE_LAUNCH_ERROR
  sshKey:
    Description: REQUIRED - Supply the public key that will be used for SSH authentication
      to the BIG-IP and application virtual machines.
    Type: 'AWS::EC2::KeyPair::KeyName'
  uniqueString:
    ConstraintDescription: 'Must Contain between 1 and 12 alphanumeric characters
      with first character as a letter.'
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]{1,11}$
    Description: Unique String used when creating object names or Tags.
    Type: String
    Default: myUniqStr
  vpcCidr:
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  vpcId:
    Description: Id for VPC to use with deployment
    ConstraintDescription: Must be valid VPC ID
    Type: AWS::EC2::VPC::Id
Conditions:
  createBigIpInstanceProfile: !Equals
    - !Ref 'bigIpInstanceProfile'
    - ""
  createLogDestination: !Equals
    - 'true'
    - !Ref 'createLogDestination'
  createLoggingS3Bucket: !And
    - !Condition 'createLogDestination'
    - !Condition 'useLoggingS3Bucket'
  customDashboard: !Not
    - !Equals
      - ''
      - !Ref 'cloudWatchDashboardName'
  customLogGroup: !Not
    - !Equals
      - ''
      - !Ref 'cloudWatchLogGroupName'
  customLogStream: !Not
    - !Equals
      - ''
      - !Ref 'cloudWatchLogStreamName'
  customNameSpace: !Not
    - !Equals
      - ''
      - !Ref 'metricNameSpace'
  externalLB: !Equals
    - 'true'
    - !Ref 'provisionExternalBigipLoadBalancer'
  internalLB: !Equals
    - 'true'
    - !Ref 'provisionInternalBigipLoadBalancer'
  noCustomImageId: !Equals
    - ''
    - !Ref 'bigIpCustomImageId'
  noPublicIp: !Equals
    - 'false'
    - !Ref 'provisionPublicIp'
  useLoggingS3Bucket: !Not
    - !Equals
      - ''
      - !Ref 'loggingS3BucketName'
  useSecretArn: !Not
    - !Equals
      - ''
      - !Ref 'bigIpSecretArn'
Resources:
  Access:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.amazonaws.com/${artifactLocation}modules/access/access.yaml'
        - S3Region: !Ref 's3BucketRegion'
          S3Bucket: !Ref 's3BucketName'
      Parameters:
        application: !Ref 'application'
        bigIqSecretArn: !Ref 'bigIqSecretArn'
        cloudWatchLogGroup: !If
          - createLogDestination
          - !GetAtt
            - Telemetry
            - Outputs.cloudWatchLogGroup
          - !Ref 'AWS::NoValue'
        cost: !Ref 'cost'
        createAmiRole: 'true'
        createBigIpRoles: !If [createBigIpInstanceProfile, 'true', 'false']
        createBigIqRoles: 'true'
        environment: !Ref 'environment'
        group: !Ref 'group'
        metricNameSpace: !If [customNameSpace, !Ref 'metricNameSpace', 'f5-scaling-metrics']
        s3Bucket: !If
          - createLoggingS3Bucket
          - !GetAtt
            - Telemetry
            - Outputs.s3Bucket
          - !If
            - useLoggingS3Bucket
            - !Ref 'loggingS3BucketName'
            - !Ref 'AWS::NoValue'
        secretArn: !If [useSecretArn, !Ref 'bigIpSecretArn', !Ref 'AWS::NoValue']
        solutionType: !If [useLoggingS3Bucket, secretS3, secret]
        uniqueString: !Ref 'uniqueString'
  AmiInfo:
    Type: 'Custom::AMIInfo'
    Properties:
      OSName: !Ref 'bigIpImage'
      OwnerId: 'aws-marketplace'
      Region: !Ref 'AWS::Region'
      ServiceToken: !GetAtt [Function, Outputs.lambdaARN]
  BigipAutoscale:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.amazonaws.com/${artifactLocation}modules/bigip-autoscale/bigip-autoscale.yaml'
        - S3Region: !Ref 's3BucketRegion'
          S3Bucket: !Ref 's3BucketName'
      Parameters:
        allowUsageAnalytics: !Ref 'allowUsageAnalytics'
        application: !Ref 'application'
        bigIpExternalSecurityGroup: !GetAtt
          - Dag
          - Outputs.bigIpMgmtSecurityGroup
        bigIpRuntimeInitConfig: !Ref 'bigIpRuntimeInitConfig'
        bigIpRuntimeInitPackageUrl: !Ref 'bigIpRuntimeInitPackageUrl'
        instanceProfile: !If
          - createBigIpInstanceProfile
          - !GetAtt
            - Access
            - Outputs.bigIpInstanceProfile
          - !Ref 'bigIpInstanceProfile'
        bigIqLicenseRevokeSnsTopic: !GetAtt
          - Function
          - Outputs.snsTopic
        bigIqNotificationRole: !GetAtt
          - Access
          - Outputs.bigIqNotificationRole
        bigIqSecretArn: !Ref 'bigIqSecretArn'
        cost: !Ref 'cost'
        cloudWatchLogGroupName: !If [customLogGroup, !Ref 'cloudWatchLogGroupName',
          'f5telemetry']
        cloudWatchLogStreamName: !If [customLogStream, !Ref 'cloudWatchLogStreamName',
          'f5-waf-logs']
        environment: !Ref 'environment'
        externalTargetGroupHttp: !If
          - externalLB
          - !GetAtt
            - Dag
            - Outputs.externalTargetGroupHttp
          - !Ref 'AWS::NoValue'
        externalTargetGroupHttps: !If
          - externalLB
          - !GetAtt
            - Dag
            - Outputs.externalTargetGroupHttps
          - !Ref 'AWS::NoValue'
        group: !Ref 'group'
        imageId: !If
          - noCustomImageId
          - !GetAtt
            - AmiInfo
            - Id
          - !Ref 'bigIpCustomImageId'
        instanceType: !Ref 'bigIpInstanceType'
        internalTargetGroupHttp: !If
          - internalLB
          - !GetAtt
            - Dag
            - Outputs.internalTargetGroupHttp
          - !Ref 'AWS::NoValue'
        internalTargetGroupHttps: !If
          - internalLB
          - !GetAtt
            - Dag
            - Outputs.internalTargetGroupHttps
          - !Ref 'AWS::NoValue'
        licenseType: 'bigiq'
        maxBatchSize: !Ref 'bigIpMaxBatchSize'
        metricNameSpace: !If [customNameSpace, !Ref 'metricNameSpace', 'f5-scaling-metrics']
        minInstancesInService: !Ref 'bigIpMinInstancesInService'
        notificationEmail: !Ref 'notificationEmail'
        pauseTime: !Ref 'bigIpPauseTime'
        provisionPublicIp: !Ref 'provisionPublicIp'
        scaleInCpuThreshold: !Ref 'bigIpScaleInCpuThreshold'
        scaleInThroughputThreshold: !Ref 'bigIpScaleInThroughputThreshold'
        scaleOutCpuThreshold: !Ref 'bigIpScaleOutCpuThreshold'
        scaleOutThroughputThreshold: !Ref 'bigIpScaleOutThroughputThreshold'
        scalingMinSize: !Ref 'bigIpScalingMinSize'
        scalingMaxSize: !Ref 'bigIpScalingMaxSize'
        secretArn: !If [useSecretArn, !Ref 'bigIpSecretArn', !Ref 'AWS::NoValue']
        snsEvents: !Join [',', !Ref 'snsEvents']
        sshKey: !Ref 'sshKey'
        subnets: !Join
          - ','
          - - !Ref 'bigIpSubnetAz1'
            - !Ref 'bigIpSubnetAz2'
        uniqueString: !Ref 'uniqueString'
  Dag:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.amazonaws.com/${artifactLocation}modules/dag/dag.yaml'
        - S3Region: !Ref 's3BucketRegion'
          S3Bucket: !Ref 's3BucketName'
      Parameters:
        application: !Ref 'application'
        cost: !Ref 'cost'
        createAppSecurityGroup: 'true'
        createBastionSecurityGroup: !If [noPublicIp, 'true', 'false']
        createExternalSecurityGroup: 'false'
        createInternalSecurityGroup: 'false'
        environment: !Ref 'environment'
        externalSubnetAz1: !If [externalLB, !Ref 'externalSubnetAz1', !Ref 'AWS::NoValue']
        externalSubnetAz2: !If [externalLB, !Ref 'externalSubnetAz2', !Ref 'AWS::NoValue']
        group: !Ref 'group'
        internalSubnetAz1: !If [internalLB, !Ref 'internalSubnetAz1', !Ref 'AWS::NoValue']
        internalSubnetAz2: !If [internalLB, !Ref 'internalSubnetAz2', !Ref 'AWS::NoValue']
        numberPublicMgmtIpAddresses: 0
        numberPublicExternalIpAddresses: 0
        provisionExternalBigipLoadBalancer: !Ref 'provisionExternalBigipLoadBalancer'
        provisionInternalBigipLoadBalancer: !Ref 'provisionInternalBigipLoadBalancer'
        restrictedSrcAddressApp: !Ref 'restrictedSrcAddressApp'
        restrictedSrcAddressMgmt: !Ref 'restrictedSrcAddressMgmt'
        uniqueString: !Ref 'uniqueString'
        vpc: !Ref 'vpcId'
        vpcCidr: !Ref 'vpcCidr'
  Function:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.amazonaws.com/${artifactLocation}modules/function/function.yaml'
        - S3Region: !Ref 's3BucketRegion'
          S3Bucket: !Ref 's3BucketName'
      Parameters:
        amiLookupRole: !GetAtt
          - Access
          - Outputs.lambdaAmiExecutionRole
        bigIpRuntimeInitConfig: !Ref 'bigIpRuntimeInitConfig'
        bigIqAddressType: !Ref 'bigIqAddressType'
        bigIqSecretArn: !Ref 'bigIqSecretArn'
        bigIqSecurityGroupId: !Ref 'bigIqSecurityGroupId'
        bigIqSubnetId: !Ref 'bigIqSubnetId'
        copyZipsRole: !GetAtt
          - Access
          - Outputs.copyZipsRole
        cost: !Ref 'cost'
        createAmiLookupFunction: 'true'
        createRevokeFunction: 'true'
        environment: !Ref 'environment'
        group: !Ref 'group'
        lambdaAccessRole: !GetAtt
          - Access
          - Outputs.lambdaAccessRole
        lambdaS3BucketName: !Ref 'lambdaS3BucketName'
        lambdaS3Key: !Ref 'lambdaS3Key'
        uniqueString: !Ref 'uniqueString'
  Telemetry:
    Type: 'AWS::CloudFormation::Stack'
    Condition: createLogDestination
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.amazonaws.com/${artifactLocation}modules/telemetry/telemetry.yaml'
        - S3Region: !Ref 's3BucketRegion'
          S3Bucket: !Ref 's3BucketName'
      Parameters:
        application: !Ref 'application'
        cost: !Ref 'cost'
        environment: !Ref 'environment'
        group: !Ref 'group'
        owner: !Ref 'owner'
        cloudWatchLogGroupName: !If [customLogGroup, !Ref 'cloudWatchLogGroupName',
          'f5telemetry']
        cloudWatchLogStreamName: !If [customLogStream, !Ref 'cloudWatchLogStreamName',
          'f5-waf-logs']
        cloudWatchDashboardName: !If [customDashboard, !Ref 'cloudWatchDashboardName',
          'F5-BIGIP-WAF-View']
        createCloudWatchDashboard: 'true'
        createCloudWatchLogGroup: 'true'
        createCloudWatchLogStream: 'true'
        createS3Bucket: !If [createLoggingS3Bucket, 'true', 'false']
        metricNameSpace: !If [customNameSpace, !Ref 'metricNameSpace', 'f5-scaling-metrics']
        s3BucketName: !If [createLoggingS3Bucket, !Ref 'loggingS3BucketName', !Ref 'AWS::NoValue']
