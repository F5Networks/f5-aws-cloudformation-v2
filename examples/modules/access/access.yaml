AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Access Template is intended to deploy IAM roles for all BIG-IP Cloud Solutions
  (i.e. High-Availability or Autoscale)
  Secret Manager service.
Conditions:
  createKeyPair: !Equals
    - !Ref createSshKey
    - 'true'
  createSecret: !And
    - !Equals
      - !Ref createSecret
      - 'true'
    - !Equals
      - ''
      - !Ref secretArn
  createBigIpRoles: !Equals
    - !Ref createBigIpRoles
    - 'true'
  createBigIqRoles: !Equals
    - !Ref createBigIqRoles
    - 'true'
  createAmiRole: !Equals
    - !Ref createAmiRole
    - 'true'
  standard: !And
    - !Condition createBigIpRoles
    - !Equals
      - !Ref solutionType
      - standard
  secret: !And
    - !Condition createBigIpRoles
    - !Equals
      - !Ref solutionType
      - secret
  s3: !And
    - !Condition createBigIpRoles
    - !Equals
      - !Ref solutionType
      - s3
  secretS3: !And
    - !Condition createBigIpRoles
    - !Equals
      - !Ref solutionType
      - secretS3
  failover: !And
    - !Condition createBigIpRoles
    - !Equals
      - !Ref solutionType
      - failover
  useBigIqSecretArn: !Not
    - !Equals
      - ''
      - !Ref bigIqSecretArn
  useLogGroup: !Not
    - !Equals
      - ''
      - !Ref cloudWatchLogGroup
  useSecret: !Or
    - !Condition createSecret
    - !Condition useSecretArn
  useSecretArn: !Not
    - !Equals
      - ''
      - !Ref secretArn
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: IAM ROLES
        Parameters:
          - uniqueString
          - solutionType
          - s3Bucket
          - createBigIpRoles
          - createBigIqRoles
          - secretArn
          - bigIqSecretArn
          - cloudWatchLogGroup
          - metricNameSpace
          - cfeTag
          - createSecret
          - createSshKey
      - Label:
          default: Resources Tags
        Parameters:
          - uniqueString
          - application
          - cost
          - environment
          - group
          - owner
    ParameterLabels:
      uniqueString:
        default: myBIGIP
      application:
        default: Application
      cost:
        default: Cost Center
      cfeTag:
        default: CFE Deployment tag value
      environment:
        default: Environment
      group:
        default: Group
      owner:
        default: Owner
      solutionType:
        default: Cloud Solution type
      s3Bucket:
        default: S3 bucket used as BIG-IP storage for Failover solution
      createBigIpRoles:
        default: Creates IAM roles for BIG-IP
      createBigIqRoles:
        default: Creates IAM roles for BIG-IQ
      createSecret:
        default: Creates Secrets Manager secret for BIG-IP password
      createSshKey:
        default: Creates public key
      bigIqSecretArn:
        default: The ARN of the AWS secret containing the password used during BIG-IP licensing via BIG-IQ
      secretArn:
        default: ARN of Secrets Manager secret
      cloudWatchLogGroup:
        default: CloudWatch Log Group Name
      metricNameSpace:
        default: CloudWatch Metrics Namespace
  Version: 2.7.0.0
Outputs:
  stackName:
    Description: Access nested stack name
    Value: !Ref "AWS::StackName"
  bigIpInstanceProfile:
    Condition: createBigIpRoles
    Description: BIG-IP instance profile with applied IAM policy.
    Value: !If
      - standard
      - !Ref BigIpStandardInstanceProfile
      - !If
        - secret
        - !Ref BigIpSecretInstanceProfile
        - !If
          - s3
          - !Ref BigIpS3InstanceProfile
          - !If
            - secretS3
            - !Ref BigIpSecretS3InstanceProfile
            - !If
              - failover
              - !Ref BigIpHighAvailabilityInstanceProfile
              - !Ref AWS::NoValue
  lambdaAccessRole:
    Condition: createBigIqRoles
    Description: IAM policy for BIG-IQ lambda function
    Value: !GetAtt LambdaAccessRole.Arn
  lambdaAmiExecutionRole:
    Condition: createAmiRole
    Description: IAM policy for ami lookup function
    Value: !GetAtt LambdaAmiExecutionRole.Arn
  copyZipsRole:
    Condition: createBigIqRoles
    Description: IAM policy for BIG-IQ lambda function
    Value: !GetAtt CopyZipsRole.Arn
  bigIqNotificationRole:
    Condition: createBigIqRoles
    Description: IAM policy for Lifecycle Hook notifications
    Value: !GetAtt BigIqNotificationRole.Arn
  keyPairName:
    Condition: createKeyPair
    Description: SSH key pair name
    Value: !Ref BigIpSshKeyPair
  secretArn:
    Condition: createSecret
    Description: Secret ARN
    Value: !Ref BigIpSecret
Parameters:
  application:
    Default: f5app
    Description: Application Tag.
    Type: String
  bigIqSecretArn:
    Default: ''
    Description: The ARN of the AWS secret containing the password used during BIG-IP licensing via BIG-IQ.
    Type: String
  cfeTag:
    Description: Cloud Failover deployment tag value.
    Type: String
    Default: ''
  cloudWatchLogGroup:
    Default: ''
    Description: Provides CloudWatch Log Group name used for telemetry
    Type: String
  cost:
    Default: f5cost
    Description: Cost Center Tag.
    Type: String
  createAmiRole:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Value of true creates IAM roles required for ami lookup function.
    Type: String
  createBigIpRoles:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Value of true creates IAM roles and instance profile assigned to BIG-IP instance(s).
    Type: String
  createBigIqRoles:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Value of true creates IAM roles required to revoke license assignments from BIG-IQ.
    Type: String
  createSecret:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Value of true creates AWS Secrets Manager secret.
    Type: String
  createSshKey:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Value of true creates public key that will be used for SSH authentication to the virtual machine instances.
    Type: String
  environment:
    Default: f5env
    Description: Environment Tag.
    Type: String
  group:
    Default: f5group
    Description: Group Tag.
    Type: String
  metricNameSpace:
    Default: ''
    Description: CloudWatch namespace used for custom metrics. This should match the namespace defined in your telemetry services declaration within bigipRuntimInitConfig.
    Type: String
  owner:
    Default: f5owner
    Description: Owner Tag.
    Type: String
  s3Bucket:
    Default: ''
    Description: Provides BIG-IP S3 Bucket name
    Type: String
  secretArn:
    Default: ''
    Description: ARN of Secrets Manager secret
    Type: String
  solutionType:
    AllowedValues:
      - standard
      - secret
      - s3
      - secretS3
      - failover
    Default: standard
    Description: Defines solution type to select provision correct IAM role.
    MaxLength: 20
    Type: String
  uniqueString:
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]{1,11}$
    ConstraintDescription: Must Contain between 1 and 12 alphanumeric characters with first character as a letter.
    Default: myUniqStr
    Description: Unique String used when creating object names or Tags.
    Type: String
Resources:
  BigIpSshKeyPair:
    Condition: createKeyPair
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Join
        - ''
        - - !Ref uniqueString
          - '-keyPair'
      Tags:
        - Key: application
          Value: !Ref 'application'
        - Key: costcenter
          Value: !Ref 'cost'
        - Key: environment
          Value: !Ref 'environment'
        - Key: group
          Value: !Ref 'group'
        - Key: owner
          Value: !Ref 'owner'
  BigIpSecret:
    Condition: createSecret
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Join
        - ''
        - - !Ref uniqueString
          - '-bigIpSecret'
      Description: "This secret has a dynamically generated secret password."
      GenerateSecretString:
        PasswordLength: 10
        ExcludePunctuation: true
      Tags:
        - Key: application
          Value: !Ref 'application'
        - Key: costcenter
          Value: !Ref 'cost'
        - Key: environment
          Value: !Ref 'environment'
        - Key: group
          Value: !Ref 'group'
        - Key: owner
          Value: !Ref 'owner'
  CopyZipsRole:
    Condition: createBigIqRoles
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:s3:::*'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-copy-zips-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-copy-zips-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
        - Key: DeleteKey
          Value: !Ref uniqueString
  LambdaAccessRole:
    Condition: createBigIqRoles
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'autoscaling:CompleteLifecycleAction'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DeleteNetworkInterface'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'secretsmanager:GetSecretValue'
                Effect: Allow
                Resource: !Ref bigIqSecretArn
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:logs:*:*:*'
            Version: 2012-10-17
          PolicyName: LambdaAccessPolicy
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-lambda-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-lambda-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  LambdaAmiExecutionRole:
    Condition: createAmiRole
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LambdaAmiAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeImages'
                Resource: '*'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-lambda-ami-execution-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-lambda-ami-execution-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIqNotificationRole:
    Condition: createBigIqRoles
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - autoscaling.amazonaws.com
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AutoScalingNotificationAccessRole'
      Path: /
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigiq-notification-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigiq-notification-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIpStandardAccessRole:
    Condition: standard
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeAutoScalingInstances'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeTags'
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Ref cloudWatchLogGroup
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringEquals:
                    cloudwatch:namespace: !Ref metricNameSpace
              - Action:
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:SignalResource'
                Effect: Allow
                Resource:
                  - '*'
            Version: 2012-10-17
          PolicyName: !Join
            - ''
            - - !Ref uniqueString
              - '-BigipStandardAcccessPolicy'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigip-standard-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigip-standard-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIpSecretAccessRole:
    Condition: secret
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeAutoScalingInstances'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeTags'
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Ref cloudWatchLogGroup
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringEquals:
                    cloudwatch:namespace: !Ref metricNameSpace
              - Action:
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:SignalResource'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:GetResourcePolicy'
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:ListSecretVersionIds'
                Effect: Allow
                Resource:
                  - !If
                    - useSecret
                    - !If
                      - useSecretArn
                      - !Ref secretArn
                      - !Ref BigIpSecret
                    - !Ref AWS::NoValue
                  - !If
                    - useBigIqSecretArn
                    - !Ref bigIqSecretArn
                    - !Ref AWS::NoValue
            Version: 2012-10-17
          PolicyName: !Join
            - ''
            - - !Ref uniqueString
              - '-BigipSecretAcccessPolicy'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigip-secret-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigip-secret-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
        - Key: DeleteKey
          Value: !Ref uniqueString
  BigIpS3AccessRole:
    Condition: s3
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeAutoScalingInstances'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeTags'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 'sts:AssumeRole'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Ref cloudWatchLogGroup
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringEquals:
                    cloudwatch:namespace: !Ref metricNameSpace
              - Action:
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:SignalResource'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 's3:ListBucket'
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:*:s3:::'
                    - !Ref s3Bucket
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:*:s3:::'
                    - !Ref s3Bucket
                    - /*
            Version: 2012-10-17
          PolicyName: !Join
            - ''
            - - !Ref uniqueString
              - '-BigipS3AcccessPolicy'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigip-s3-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigip-s3-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIpSecretS3AccessRole:
    Condition: secretS3
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeAutoScalingInstances'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeTags'
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Ref cloudWatchLogGroup
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringEquals:
                    cloudwatch:namespace: !Ref metricNameSpace
              - Action:
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:SignalResource'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:GetResourcePolicy'
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:ListSecretVersionIds'
                Effect: Allow
                Resource:
                  - !If
                    - useSecret
                    - !If
                      - useSecretArn
                      - !Ref secretArn
                      - !Ref BigIpSecret
                    - !Ref AWS::NoValue
                  - !If
                    - useBigIqSecretArn
                    - !Ref bigIqSecretArn
                    - !Ref AWS::NoValue
              - Action:
                  - 's3:ListBucket'
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:*:s3:::'
                    - !Ref s3Bucket
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:*:s3:::'
                    - !Ref s3Bucket
                    - /*
            Version: 2012-10-17
          PolicyName: !Join
            - ''
            - - !Ref uniqueString
              - '-BigipSecretAndS3AcccessPolicy'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigip-secret-s3-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigip-secret-s3-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIpHighAvailabilityAccessRole:
    Condition: failover
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeAddresses
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeNetworkInterfaceAttribute
                  - ec2:DescribeTags
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - ec2:DescribeSubnets
                  - ec2:DescribeRouteTables
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - ec2:AssociateAddress
                  - ec2:DisassociateAddress
                  - ec2:AssignPrivateIpAddresses
                  - ec2:UnassignPrivateIpAddresses
                  - ec2:AssignIpv6Addresses
                  - ec2:UnassignIpv6Addresses
                  - ec2:CreateRoute
                  - ec2:ReplaceRoute
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/f5_cloud_failover_label: !Ref cfeTag
              - Action:
                  - s3:ListAllMyBuckets
                Effect: Allow
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Ref AWS::AccountId
              - Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetBucketTagging
                Effect: Allow
                Resource: !Join
                  - ''
                  - - "arn:*:s3:::"
                    - !Ref s3Bucket
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Effect: Allow
                Resource: !Join
                  - ''
                  - - "arn:*:s3:::"
                    - !Ref s3Bucket
                    - /*
              - Action: 
                  - s3:PutObject
                Condition:
                  'Null':
                    's3:x-amz-server-side-encryption': true
                Effect: Deny
                Resource: !Join
                  - ''
                  - - "arn:*:s3:::"
                    - !Ref s3Bucket
                    - /*
                Sid: DenyPublishingUnencryptedResources
              - Action: 
                  - s3:PutObject
                Condition:
                  StringNotEquals:
                      s3:x-amz-server-side-encryption: AES256
                Effect: Deny
                Resource: !Join
                  - ''
                  - - "arn:*:s3:::"
                    - !Ref s3Bucket
                    - /*
                Sid: DenyIncorrectEncryptionHeader
              - Action:
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:GetResourcePolicy'
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:ListSecretVersionIds'
                Effect: Allow
                Resource:
                  - !If
                    - useSecret
                    - !If
                      - useSecretArn
                      - !Ref secretArn
                      - !Ref BigIpSecret
                    - !Ref AWS::NoValue
                  - !If
                    - useBigIqSecretArn
                    - !Ref bigIqSecretArn
                    - !Ref AWS::NoValue
              - Action:
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Ref cloudWatchLogGroup
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: 
                  - '*'
                Condition:
                  StringEquals:
                    cloudwatch:namespace: !Ref metricNameSpace
              - Action:
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:SignalResource'
                Effect: Allow
                Resource:
                  - '*'
            Version: 2012-10-17
          PolicyName: !Join
            - ''
            - - !Ref uniqueString
              - '-BigipHighAvailabilityAcccessPolicy'
      RoleName: !Join
        - ''
        - - !Ref uniqueString
          - '-bigip-high-availability-access-role'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-bigip-high-availability-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  BigIpStandardInstanceProfile:
    Condition: standard
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BigIpStandardAccessRole
  BigIpSecretInstanceProfile:
    Condition: secret
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BigIpSecretAccessRole
  BigIpS3InstanceProfile:
    Condition: s3
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BigIpS3AccessRole
  BigIpSecretS3InstanceProfile:
    Condition: secretS3
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BigIpSecretS3AccessRole
  BigIpHighAvailabilityInstanceProfile:
    Condition: failover
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BigIpHighAvailabilityAccessRole
